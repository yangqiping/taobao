{"version":3,"sources":["components/List.js","components/btns.js","pages/Home.js","components/Control.js","pages/context.js","pages/Demo02.js","pages/Demo01.js","pages3/Mytab.js","pages3/Shouye.js","pages3/Gouwuche.js","pages3/Child.js","pages3/My.js","pages3/List.js","pages3/More.js","pages3/SearchBar.js","App.js","pages/Hoc.js","components/Input.js","components/TodoList.js","index.js"],"names":["List","done","this","props","id","renderTodos","Component","Buttons","map","item","key","onClick","getData","React","Context","createContext","Demo02","style","width","height","backgroundColor","Consumer","data","Demo01","protoTypes","name","PropTypes","string","isRequired","defaultProps","Mytab","state","selectedTab","location","pathname","position","bottom","unselectedTintColor","tintColor","barTintColor","Item","icon","className","selectedIcon","title","selected","onPress","console","log","setState","history","push","badge","dot","withRouter","Shouye","imgHeight","data1","src","setTimeout","autoplay","infinite","beforeChange","from","to","afterChange","index","slideWidth","top","val","href","display","alt","verticalAlign","onLoad","window","dispatchEvent","Event","i","Gouwuche","goBack","left","My","More","Search","placeholder","maxLength","onCancel","App","exact","path","component","Child","withFetch","Com","url","fetch","then","res","json","Input","dangerouslySetInnerHTML","__html","content","htmlFor","type","onChange","handleChange","value","inpValue","ref","inp","input","addTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ee7cedc.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nexport default class List extends Component {\r\n  render() {\r\n    const done = this.props.done\r\n      return (\r\n        <div id=\"div2\">\r\n          <ul id=\"doing\"> \r\n            {this.props.renderTodos(done)}\r\n          </ul>\r\n        </div>\r\n        \r\n      )\r\n  }\r\n}","import React from 'react';\r\n//函数 数组任何数据都在props中\r\nconst Buttons = (props)=>{\r\n    const btns = [1,2,3,4,5];\r\n    {\r\n        return <div>{\r\n            btns.map(\r\n                (item)=>(\r\n                  <button \r\n                    key={item}  onClick = {()=>props.getData(item)}\r\n                  >\r\n                    {item}\r\n                  </button>\r\n              ))\r\n            }\r\n\r\n        </div>\r\n       \r\n      }\r\n}\r\n\r\n\r\nexport default Buttons;","import React,{Component} from 'react'; //这一个是必须写的 因为这里面用到了\r\nimport List from '../components/List'  //这里也要去引用List\r\nimport Buttons from '../components/btns';\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        data:[]\r\n      }\r\n      // this.handleClick = this.handleClick.bind(this)\r\n    }\r\n  componentDidMount(){\r\n      fetch('https://cnodejs.org/api/v1/topics')\r\n      .then(res=>res.json())\r\n      .then( ({data}) => {\r\n        console.log(data);\r\n        this.setState({data})\r\n      })\r\n    }\r\n  getData=(page)=>{\r\n    console.log(page);\r\n    fetch('https://cnodejs.org/api/v1/topics?page='+page).\r\n    then(res=>res.json()).\r\n    then(({data})=>{\r\n    console.log(data);\r\n    this.setState({data}); //这里拿到json数据\r\n  })\r\n  }\r\n    render(){\r\n      const { data } = this.state;\r\n      return <div>\r\n          \r\n        <Buttons getData = {this.getData}/>\r\n        <List data={data}/>\r\n      </div>\r\n    }\r\n  }\r\n  //命名导出 默认导出 主要看react都是默认导出不用取名    \r\n  //默认导出 只能导出一个\r\n  export default Home; //这里是默认导出  \r\n\r\n//   //命名导出\r\n//   let a =10;\r\n//   export {a}\r\n//   //在另一个文件引用的时候就是  \r\n//   import {a} from ''\r\n\r\n","\r\nimport React, { Component } from 'react'\r\n//引入样式样式\r\nimport './control.css';\r\nexport default class Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[{title:'1',done:false},\r\n            {title:'2',done:true},\r\n            {title:'3',done:false},\r\n            {title:'4',done:false}\r\n        \r\n        ],\r\n        // finished:[\r\n        //     {title:'',done:false}\r\n        // ]\r\n        }\r\n    }\r\n    //获取实时内容\r\n    handleChange = (e)=>{\r\n        console.log(\"执行了handlechange\");\r\n        console.log(e.target.value);\r\n        this.setState({inpValue:e.target.value});\r\n\r\n        // localStorage.setItem('KEY',e.target.value);\r\n\r\n    }\r\n    // addChange = (todos)=>{\r\n    //     this.setState({todos.title:todos.target.value})\r\n    // }\r\n    \r\n    //这个的作用是 让他刷新之后还存在 在这里去存\r\n    componentDidUpdate(){\r\n        console.log(\"执行了update\");\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        \r\n\r\n    }\r\n\r\n    //在这里面去取\r\n    componentDidMount(){\r\n        console.log(\"执行了didmount\");\r\n\r\n        this.input.focus();\r\n        // this.input.value; 这样也可以\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n            //有就把值赋给 todos \r\n        }\r\n    }\r\n    //添加内容到已经完成里面\r\n    addTodo=()=>{\r\n        console.log(\"执行了addtodo\");\r\n\r\n        if(this.state.inpValue){\r\n            this.setState({\r\n                todos:[\r\n                    {\r\n                        title:this.state.inpValue,\r\n                        done:false},\r\n                        ...this.state.todos\r\n                ]\r\n            })\r\n            this.setState({inpValue:''})\r\n        }\r\n        \r\n        // else{\r\n        //     return;\r\n        // }\r\n        \r\n    }\r\n    // addTodo=()=>{\r\n    //     this.state.todos.push({title:this.state.inpValue}); //在数组里面再添加一项\r\n    //     this.setState({todos:this.state.todos});\r\n    // }\r\n    //删除内容\r\n    removeTodo=(index)=>{\r\n        console.log(\"执行了removetodo\");\r\n\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos));//深拷贝 一个全新的\r\n        // newTodos.splice(index,1);\r\n        // this.setState({\r\n        //     todos:newTodos\r\n        // })\r\n        //  另一种方法\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,idx)=>\r\n                index!=idx\r\n                //不等于它就是真的 就会返回 这里就是直接一个函数。 这里是一个返回值\r\n            )\r\n        },()=>{\r\n            localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n\r\n        })\r\n\r\n        // console.log(e);\r\n        // console.log(this.state.todos[0].title);\r\n    }\r\n    // setStatus=(status)=>{\r\n    //     console.log(status);\r\n    //     if(status){\r\n    //         this.setState(\r\n    //             {\r\n    //                 finished:[\r\n    //                     {title:this.state.inpValue,done:false},...this.state.todos\r\n    //                 ]\r\n    //             }\r\n    //         )\r\n    //     }\r\n    // }\r\n    toggle=(index)=>{\r\n        console.log(\"执行了toggle\");\r\n\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n           todos:newTodos\r\n        });\r\n      \r\n    }\r\n    renderTodos=(done)=>{\r\n        console.log(\"执行了rendertodo\");\r\n    \r\n      return this.state.todos.map((todo,index) =>{\r\n            if(done == todo.done){\r\n                return <li>\r\n                    {/* <input type=\"checkbox\" onClick={()=>this.setStatus(todo.done)} /> */}\r\n                    <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    {/* 这里是实现添加那个<h1>ddd</h1>的  就是解析标签 */}\r\n                    {/* <span >{todo.title}</span> */}\r\n\r\n                    <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                </li>\r\n            }\r\n            \r\n        })\r\n    }\r\n    render() { \r\n        //  localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        //写在这里都会执行 就不用在toggle中写了\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>item.done);\r\n        let arr2 = todos.filter(item=>!item.done);\r\n        // let arr1 = todos.filter((item,index)=>{\r\n        //     return !item.done;\r\n        //     console.log(index,item);\r\n        // })\r\n        //每循环一次 回调函数执行一次\r\n        return (\r\n            <div className='box'>\r\n                <label htmlFor=\"inp\">todolist\r\n                \r\n                </label>\r\n                <input id =\"inp\"value={inpValue} type=\"text\" onChange={this.handleChange} ref={inp =>this.input = inp} action=\"#content\" placeholder=\"todo\" >\r\n                    {/* 加入了value就是react的了 value后面的值不能动了 就是一改变就会调用这个函数  value后面的值是默认的 给他赋值是e.target.value 走了setState就会更新*/}\r\n                </input>\r\n                <button onClick={this.addTodo} >\r\n                    添加\r\n                </button>\r\n                <h2>\r\n                    正在进行{arr2.length}\r\n                </h2>\r\n               \r\n                {/* {\r\n                    [{title:1,done:false},{}].map()\r\n                } */}\r\n                <ul id=\"doing\">\r\n                    \r\n                    {this.renderTodos(false)}\r\n                   \r\n                </ul>\r\n                <h2>\r\n                    已经完成{arr1.length}\r\n                </h2>\r\n                <ul style={{color:'blue'}}>\r\n                    {/* //里面是个对象变量 第一个是变量括起来 里面是对象 marginRight */}\r\n                    {/* {{color:3>2'red':'green'}} */}\r\n                    \r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {\r\n                    3>2 ? <button>登录</button>:<span>不成立</span>\r\n                }\r\n                {/* 可以直接加条件判断 不能查if语句 因为放的要是一个值 */}\r\n                <button>\r\n                    {2>3?'真':'假'}\r\n                    {/* 声明一个状态 每次取反 ture一直切换  */}\r\n\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nconst Context = React.createContext();//返回一个对象 来接受它、\r\nexport default Context;\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\n\r\nfunction Demo02() {\r\n    return (\r\n        <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo02</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                            // data =>data.map(item=><li key ={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    \r\n\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Demo02\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport Demo02 from './Demo02'\r\n\r\n//小练习 对于行内加样式\r\n\r\n        const Demo01 = (props)=>{\r\n            return (\r\n                <div style={{width:100,height:'100px',backgroundColor:'red'}}>\r\n                    <h2>demo01</h2>\r\n                    <ul>\r\n                        <Context.Consumer>\r\n                        {\r\n                            data=>data.data.map((item)=><li key={item}>{item}</li>)\r\n                        }\r\n                        </Context.Consumer>\r\n                    </ul>\r\n                    <Demo02/>\r\n                        {/* 这里引用就直接写就行 */}\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    \r\n\r\nDemo01.protoTypes ={\r\n    name:PropTypes.string.isRequired\r\n    //必须传的  \r\n}\r\nDemo01.defaultProps={\r\n    name:'tomg'\r\n    // 就是你没有传参数的时候 给你一个默认的。\r\n}\r\nexport default Demo01\r\n","import { Button ,TabBar} from 'antd-mobile';\r\nimport {withRouter} from 'react-router-dom'\r\nimport React from 'react';\r\n\r\n\r\nclass Mytab extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        selectedTab: 'shouye',\r\n\r\n        \r\n      };\r\n    }\r\n   \r\n    render() {\r\n      // console.log(this.props)\r\n      const pathname =this.props.location.pathname;\r\n      return (\r\n        <div style={ {position: 'fixed',bottom:0, width: '100%'  }}>\r\n          <TabBar\r\n            unselectedTintColor=\"#111111\"\r\n            tintColor=\"#33A3F4\"\r\n            barTintColor=\"#f7e5e8\"\r\n          >\r\n            <TabBar.Item\r\n              icon={<i className=\"iconfont iconzhifubao\"></i>}\r\n              selectedIcon={<i className=\"iconfont iconzhifubao\"></i>}\r\n              title=\"首页\"\r\n              key=\"shouye\"\r\n          \r\n\r\n              selected={this.state.selectedTab === '/shouye'}\r\n              \r\n              onPress={() => {\r\n                console.log(this.props)\r\n                this.setState({\r\n                  selectedTab: '/shouye',\r\n                });\r\n                this.props.history.push('/shouye')\r\n              }}\r\n            >\r\n    \r\n            </TabBar.Item>\r\n            <TabBar.Item\r\n              icon={<i className=\"iconfont icongouwuchezhengpin\"></i>}\r\n              selectedIcon={<i className=\"iconfont icongouwucheman\"></i>}\r\n              title=\"购物车\"\r\n              key=\"gouwuche\"\r\n          \r\n\r\n              selected={this.state.selectedTab === '/gouwuche'}\r\n              onPress={() => {\r\n                this.setState({\r\n                  selectedTab: '/gouwuche',\r\n                });\r\n                this.props.history.push('/gouwuche')\r\n              }}\r\n            >\r\n    \r\n            </TabBar.Item>\r\n            \r\n            <TabBar.Item\r\n              icon={<i className=\"iconfont iconliebiao\"></i>}\r\n              selectedIcon={<i className=\"iconfont iconliebiao\"></i>}\r\n              title=\"订单列表\"\r\n              key=\"list\"\r\n          \r\n\r\n              selected={this.state.selectedTab === '/list'}\r\n              onPress={() => {\r\n                this.setState({\r\n                  selectedTab: '/list',\r\n                });\r\n                this.props.history.push('/list')\r\n              }}\r\n            >\r\n  \r\n            </TabBar.Item>\r\n\r\n            <TabBar.Item\r\n              icon={<i className=\"iconfont iconjinqian\"></i>}\r\n              selectedIcon={<i className=\"iconfont iconjinqian\"></i>}\r\n              title=\"我的淘宝\"\r\n              key=\"my\"\r\n              selected={this.state.selectedTab === '/my'}\r\n              badge={999}\r\n              onPress={() => {\r\n                this.setState({\r\n                  selectedTab: '/my',\r\n                });\r\n                this.props.history.push('/my')\r\n              }}\r\n            >\r\n            \r\n            </TabBar.Item>\r\n            <TabBar.Item\r\n              icon={ <i className=\"iconfont icongengduo\"></i>}\r\n                \r\n      \r\n              selectedIcon={\r\n                <i className=\"iconfont icongengduo\"></i>\r\n              }\r\n              title=\"更多\"\r\n              key=\"more\"\r\n              dot\r\n              selected={this.state.selectedTab === '/more'}\r\n              onPress={() => {\r\n                this.setState({\r\n                  selectedTab: '/more',\r\n                });\r\n                this.props.history.push('/more')\r\n              }}\r\n            >\r\n  \r\n            </TabBar.Item>\r\n            \r\n            \r\n          </TabBar>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default withRouter(Mytab);","import { render } from '@testing-library/react';\r\nimport { SearchBar, Carousel, WingBlank } from 'antd-mobile'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Shouye.css';\r\nimport Mytab from './Mytab'\r\n\r\n// iconfont.cn官网搜选图标，加入购物车\r\n// 点击页面右上角购物车，将图标添加进项目（没有项目就新建）\r\n// 点击“下载到本地”\r\n// 解压压缩包，全部复制到项目public文件夹下，\r\n// 在index.html中通过link引入iconfont.css\r\n// 使用时，<i className='iconfont icon-具体名字'></i>\r\n\r\nclass Shouye extends React.Component {\r\n    \r\n    constructor(props)  {\r\n        super(props);\r\n\r\n        this.state={\r\n            data: ['1', '2', '3'],\r\n            imgHeight: 176,\r\n            data1:[{src:'https://gw.alicdn.com/bao/uploaded/i1/862991077/O1CN01od8u5g1JpJ8EPet5S_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i4/268429194/O1CN012Hmtu8oU89WIYMV_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i1/1845023737/O1CN014lkbb81dTaaDQDpbl_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i2/1063808721/O1CN012EIGY6TF818XhJX_!!1063808721.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i1/862991077/O1CN01od8u5g1JpJ8EPet5S_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i4/268429194/O1CN012Hmtu8oU89WIYMV_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i1/1845023737/O1CN014lkbb81dTaaDQDpbl_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i2/1063808721/O1CN012EIGY6TF818XhJX_!!1063808721.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i1/862991077/O1CN01od8u5g1JpJ8EPet5S_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i4/268429194/O1CN012Hmtu8oU89WIYMV_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i1/1845023737/O1CN014lkbb81dTaaDQDpbl_!!0-item_pic.jpg_500x500q90.jpg_.webp'},\r\n            {src:'https://gw.alicdn.com/bao/uploaded/i2/1063808721/O1CN012EIGY6TF818XhJX_!!1063808721.jpg_500x500q90.jpg_.webp'}\r\n            ]\r\n        }\r\n      }\r\n      componentDidMount() {\r\n        // simulate img loading\r\n        setTimeout(() => {\r\n          this.setState({\r\n            data: ['https://gw.alicdn.com/imgextra/i2/157/O1CN01Re3rVm1D1woIdnlKX_!!157-0-lubanu.jpg', 'https://gw.alicdn.com/imgextra/i4/78/O1CN01Hj1MnQ1CRlWSMGORM_!!78-0-lubanu.jpg', 'https://gw.alicdn.com/imgextra/i2/60/O1CN01zHL8nS1CJWOSJYiLf_!!60-0-lubanu.jpg'],\r\n          });\r\n        }, 100);\r\n      }\r\n    \r\n    render(){\r\n        return (\r\n            // <div>\r\n            //      <span className=\"text iconfont icon-search\" onClick={()=>{\r\n            //          props.history.push('/shouye/child')\r\n            //      }}>\r\n            //          寻找宝贝店铺\r\n            //     </span>\r\n            // </div>\r\n           \r\n            \r\n            <div >\r\n                 <header className=\"Search\">\r\n                    <div className=\"header-bd\">\r\n                        <a className=\"placeholder\" onClick={()=>{this.props.history.push('/shouye/search')}}>\r\n                        <span className=\"text iconfont iconsousuo\">寻找宝贝店铺</span>\r\n                        </a>\r\n                    </div>\r\n                </header>\r\n                \r\n                \r\n              \r\n                    <Carousel\r\n                    autoplay={true}\r\n                    infinite\r\n                    beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\r\n                    afterChange={index => console.log('slide to', index)}\r\n                    slideWidth={1}\r\n                    style = {{top:'37px'}}\r\n                    >\r\n                    {this.state.data.map(val => (\r\n                        <a\r\n                        key={val}\r\n                        href=\"http://www.alipay.com\"\r\n                        style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\r\n                        >\r\n                        <img\r\n                            src={`${val}`}\r\n                            alt=\"\"\r\n                            style={{ width: '100%', verticalAlign: 'top' }}\r\n                            onLoad={() => {\r\n                            // fire window resize event to change height\r\n                            window.dispatchEvent(new Event('resize'));\r\n                            this.setState({ imgHeight: 'auto' });\r\n                            }}\r\n                        />\r\n                        </a>\r\n                    ))}\r\n                    </Carousel>\r\n                    <ul className=\"recommend-container\">\r\n                        {\r\n                            this.state.data1.map((data,i)=>{\r\n                                return <li className=\"recommend-item\" onClick={()=>{\r\n                                    this.props.history.push(\r\n                                        {\r\n                                            pathname:'/shouye/child',\r\n                                            src:data.src\r\n                                        }\r\n                                    )\r\n                                }}>\r\n                                    <img src={data.src} className=\"recommend-img-wrapper\"/>\r\n        \r\n                                </li>\r\n                                \r\n                            })\r\n                        }\r\n                       \r\n                    </ul>\r\n                    <Mytab/>  \r\n            </div>\r\n\r\n            \r\n              \r\n           \r\n    \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Shouye","import React from 'react'\r\nimport Mytab from './Mytab'\r\nconst Gouwuche = () => {\r\n    return (\r\n        <div>\r\n            购物车\r\n            <Mytab/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Gouwuche\r\n\r\n","import React from 'react'\r\nimport './Child.css'\r\nimport {\r\n    NavLink, Route, Redirect,\r\n    useHistory,\r\n    useLocation,\r\n    useParams,\r\n    useRouteMatch,\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport {NavBar,Icon} from 'antd-mobile'\r\nconst Child = (props) => {\r\n    return (\r\n        <div className='doc'>\r\n            <button onClick={()=>{\r\n                props.history.goBack();\r\n            }}>&lt;</button>\r\n\r\n            <div>\r\n                <img src={props.location.src} style={{width:'300px',height:'185.4px',left:'30px',position:'fixed'}}/>\r\n            </div>\r\n            <div className=\"action-bar-wrap\">\r\n                <button><i className=\"iconfont icondianpu\"></i>店铺</button>\r\n                <button><i className=\"iconfont iconkefu\"></i>客服</button>\r\n                <button><i className=\"iconfont iconshoucang\"></i>收藏</button>\r\n                <button className=\"cart\">加入购物车</button>\r\n                <button className=\"buy\">立即购买</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Child)\r\n\r\n\r\n","import React from 'react'\r\nimport Mytab from './Mytab'\r\nconst My = () => {\r\n    return (\r\n        <div>\r\n            我的\r\n            <Mytab/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default My","import React from 'react'\r\nimport Mytab from './Mytab'\r\nconst List = () => {\r\n    return (\r\n        <div>\r\n            订单列表\r\n            <Mytab/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default List","import React from 'react'\r\nimport Mytab from './Mytab'\r\nconst More = () => {\r\n    return (\r\n        <div>\r\n            更多\r\n            <Mytab/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default More","import React from 'react'\r\nimport { SearchBar, Button, WhiteSpace, WingBlank } from 'antd-mobile';\r\nconst Search = (props) => {\r\n    // console.log('ahsdkjh1k')\r\n    \r\n    return (\r\n        <div>\r\n            \r\n            <WingBlank><div className=\"sub-title\"></div></WingBlank>\r\n           \r\n                <SearchBar placeholder=\"寻找淘宝店铺\" maxLength={18} onCancel={()=>props.history.goBack()}/>\r\n          \r\n           \r\n            <WhiteSpace />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Search","\r\nimport React from 'react';\r\nimport {Redirect,Route ,BrowserRouter as Router,Switch} from 'react-router-dom';\r\nimport './App.css';\r\nimport Mytab from './pages3/Mytab';\r\nimport Shouye from './pages3/Shouye'\r\nimport Gouwuche from './pages3/Gouwuche'\r\nimport Child from './pages3/Child'\r\nimport My from './pages3/My'\r\nimport List from './pages3/List'\r\nimport More from './pages3/More'\r\nimport Search from './pages3/SearchBar'\r\n// import Header from './react/Header'\r\n// import Routes from './react/router.config'\r\nconst App =()=>{\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        \r\n        <Route exact path='/' component={Shouye}></Route>\r\n        <Route exact path='/shouye' component={Shouye}></Route>\r\n        <Route path='/gouwuche' component={Gouwuche}></Route>\r\n        <Route path='/list' component={List}></Route>\r\n        <Route path = '/my' component={My}></Route>\r\n        <Route path = '/more' component= {More}></Route>\r\n        <Route path='/shouye/child' component={Child}></Route>\r\n        <Route path = '/shouye/search' component= {Search}></Route>\r\n        {/* <Route render></Route>  */}\r\n      </Switch>\r\n      \r\n    </Router>\r\n  )\r\n}\r\nexport default App;\r\n\r\n\r\n// const App = () => {\r\n// \treturn <Router >\r\n// \t\t<Header />\r\n// \t\t<Switch >\r\n// \t\t\t{\r\n// \t\t\t\tRoutes.map(({...rest})=>{\r\n// \t\t\t\t\t// if(pri){\r\n// \t\t\t\t\t// \treturn <PrivateRoute {...rest} />\r\n// \t\t\t\t\t// }\r\n// \t\t\t\t\treturn <RouteWithSubRoutes {...rest} />\r\n// \t\t\t\t})\r\n// \t\t\t}\r\n// \t\t</Switch>\r\n\t\t\r\n// \t</Router>\r\n// }\r\n// export const  RouteWithSubRoutes = (route) => {\r\n// \t// console.log(route);\r\n// \tif(route.pri){\r\n// \t\tconsole.log('1');\r\n// \t\tconsole.log(route.routes)\r\n// \t\treturn(\r\n// \t\t\t<PrivateRoute {...route} routes={route.routes}></PrivateRoute>\r\n// \t\t)\r\n// \t}\r\n// \telse{\r\n\t\t\r\n// \t\treturn (\r\n// \t\t\t<Route\r\n// \t\t\t  path={route.path}\r\n// \t\t\t  render={props => (\r\n// \t\t\t\t// pass the sub-routes down to keep nesting\r\n// \t\t\t\t<route.component {...props} routes={route.routes} />\r\n// \t\t\t  )}\r\n// \t\t\t/>\r\n// \t\t  );\r\n// \t}\r\n\t\r\n//   }\r\n// function PrivateRoute({ component: Com, ...rest }) {\r\n// \treturn (\r\n// \t\t<Route\r\n// \t\t\t{ ...rest }\r\n// \t\t\trender={ ({ location }) =>\r\n// \t\t\t\tlocalStorage.getItem('userinfo')\r\n// \t\t\t\t\t? <Com {...rest}  />\r\n// \t\t\t\t\t: (\r\n// \t\t\t\t\t\t<Redirect\r\n// \t\t\t\t\t\t\tto={ {\r\n// \t\t\t\t\t\t\t\tpathname: \"/login\",\r\n// \t\t\t\t\t\t\t\tstate: location\r\n// \t\t\t\t\t\t\t} }\r\n// \t\t\t\t\t\t/>\r\n// \t\t\t\t\t)\r\n// \t\t\t}\r\n// \t\t/>\r\n// \t);\r\n// }\r\n\r\n\r\n// export default App;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//高阶函数 接受一个组件返回一个新的组件\r\nconst withFetch = (Com,url)=>{\r\n    return class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com data={this.state.data}/>\r\n        }\r\n    }\r\n}\r\nconst De =(props)=>{\r\n    return <div>\r\n        <h1>标题</h1>\r\n        {/* <div>{props.data.content}</div> */}\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}\r\n            // 这里是获取到了Com 组件中data属性的内容\r\n        } ></div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\n// 详情页\r\n// export class Detail extends Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.state={\r\n//             data:''\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/topic/5e16978581adfe260207a8c1')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data.content}))\r\n//     }\r\n//     render(){\r\n//         return<div>\r\n//             <h1>标题</h1>\r\n//             <div>{this.state.data}</div>\r\n//         </div>\r\n//     }\r\n// }\r\n\r\n\r\n// export class Hoc extends Component {\r\n//     constructor(){\r\n//         super();\r\n//         this.state = {\r\n//             data:[]\r\n//         }\r\n//     }\r\n//     componentDidMount(){\r\n//         fetch('https://cnodejs.org/api/v1/topics')\r\n//         .then(res=>res.json())\r\n//         .then(res=>this.setState({data:res.data}))\r\n//     }\r\n//     render() {\r\n//         console.log(this.state.data);\r\n//         return (\r\n//             <div>\r\n//                 hoc\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// 这是对上面的简化\r\nconst Ho = (props)=>{\r\n    console.log(props.data);\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;\r\n","import React,{Component} from 'react';\r\n// import TodoList from './TodoList'\r\n// import './TodoList.css';\r\nexport default class Input extends Component {\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div id=\"div1\">  \r\n                <label htmlFor=\"inp\">\r\n                    todolist \r\n                </label>\r\n\r\n                <input id=\"inp\" \r\n                type=\"text\"\r\n                onChange={this.props.handleChange} \r\n                value={this.props.inpValue}\r\n                ref={inp =>this.input = inp}\r\n                placeholder=\"添加ToDo\" >\r\n                </input>\r\n\r\n                <button  \r\n                onClick={this.props.addTodo} >\r\n                    添加\r\n                </button>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n//引入样式样式\r\n// import './TodoList.css';\r\nimport List from './List';\r\nimport Input from'./Input';\r\nexport default class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue :'',\r\n            todos:[ ],\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    }\r\n\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');//todos在最初进来的时候没有 \r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    addTodo=()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    toggle=(index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    removeTodo=(index)=>{\r\n        this.setState({\r\n          todos:this.state.todos.filter((item,idx)=>\r\n              index!=idx\r\n          )\r\n        })\r\n\r\n      // console.log(e);\r\n      // console.log(this.state.todos[0].title);\r\n    }\r\n    renderTodos=(done)=>{\r\n        return this.state.todos.map((todo,index) =>{\r\n              if(done == todo.done){\r\n                  return <li>\r\n                      <input  onClick={()=>this.toggle(index)}  checked={done}  type=\"checkbox\"/ >\r\n                      <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                      <button onClick={()=>this.removeTodo(index)}>删除 </button>\r\n                  </li>\r\n              }\r\n          })\r\n      }\r\n    render(){\r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>!item.done);\r\n        let arr2 = todos.filter(item=>item.done);\r\n        return (\r\n            <div>\r\n                <Input\r\n                    addTodo={this.addTodo} \r\n                    handleChange = {this.handleChange}\r\n                    inpValue = {inpValue}\r\n                /> \r\n                \r\n                <h2>正在进行{arr1.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={false}/>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <List renderTodos={this.renderTodos} done={true}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';//这个只要index 引用了就行\r\nimport Home from './pages/Home'; //导入那一个文件  \r\nimport List from './components/List'; //要导入那个文件的内容\r\n//变灰了就是声明了没有用\r\nimport Control from './components/Control';\r\nimport Demo01 from './pages/Demo01';\r\nimport App from './App';\r\nimport Hoc,{Detail} from './pages/Hoc';\r\nimport Hook from './pages/Hook';\r\nimport Context from './pages/context'\r\nimport TodoList from './components/TodoList'\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\n// import App2 from './App2'\r\n\r\n\r\n// alt shift + 上下键   复制一行\r\n// alt + 上下键         移动一行\r\n// 按住alt ，鼠标点击\r\n// Ctrl + shift + 左右键，选中整个单词\r\n// ctrl+shift+L \r\n\r\n\r\n\r\nReactDOM.render(\r\n  // <Control/>\r\n  <App/>\r\n    // <Context.Provider value='usecontext'>\r\n    //   <Hook/>\r\n    // </Context.Provider>\r\n ,\r\n  // <Hook/>,\r\n  // <div><Hoc/><Detail/></div>,\r\n  // <Hoc/>,\r\n  // <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// 组件声明\r\n// 函数组件\r\n// UI（展示）组件，木偶组件\r\n// function App(props){\r\n//   const { title, id } = props;\r\n//   return <div>\r\n//     <h1>App组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// // 智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//      super();\r\n//     //  声明状态\r\n//      this.state = {\r\n//        name: new Date().toLocaleString()\r\n//      }\r\n//      setInterval(()=>{\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//      },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id='app'/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// let ele = React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{},'hello'),\r\n//   'react'\r\n// )\r\n\r\n// 将jsx对象渲染到DOM中\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     // 解构\r\n//     const { type,props } = eleObj;\r\n//     // 创建第一层节点\r\n//     let ele = document.createElement(type);\r\n//     // 遍历属性对象，将属性添加到第一层节点对象上\r\n//     for (const prop in props) {\r\n//       console.log(prop)\r\n//       if(prop == 'children'){\r\n//         if(typeof props.children == 'string'){\r\n//             const txtNode = document.createTextNode(props.children);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//         }\r\n//         // 将第一层节点对象的子元素添加进去\r\n//         props.children.forEach( child => {\r\n//           if(typeof child == 'string'){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{\r\n//         ele[prop] = props[prop];\r\n//       }\r\n//     }\r\n\r\n//     // 将第一层DOM节点添加到container中\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n  // 1、原生JS，DOM操作（jQ）\r\n  // 2、React：开发效率高、性能高\r\n  // 3、环境搭建、创建一个项目、运行\r\n  // 4、JSX语法\r\n\r\n\r\n\r\n"],"sourceRoot":""}